const SELECT_13 = [
  { gas: 0.011, oil: 0.011, van: 0.011, cargo: 0.011 },
  { gas: 0.21, oil: 0.21, van: 0.21, cargo: 0.21 },
  { gas: 0.02, oil: 0.02, van: 0.0165, cargo: 0.005 },
  { gas: 0.05, oil: 0.05, van: 0.0177, cargo: 0.0394 },
];

export const FORMULA: any = [
  {
    id: 1,
    params: [
      {
        id: 1,
        title: '공급하거나 판매한 바이오 CNG 양',
        unit: 'Nm³/년',
        default: 0,
      },
      {
        id: 2,
        title: '설비 운전 화석연료 사용량',
        unit: 'Nm³,L,ton/년',
        default: 0,
      },
      {
        id: 3,
        title: 'CNG 운송용 트럭 평균 용량',
        unit: 'km/Truck',
        default: 1,
      },
      { id: 4, title: 'CNG 운송거리', unit: 'Nm³/년', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return params[0].value * 39.4 * 56.1 * Math.pow(10, -6);
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 전략 사용에 따른 온실가스 배출량
            ((12516 * 365 * Math.pow(10, -3) * params[0].value) / 2318763.24) *
              0.4591 +
            // 화석연료 사용에 따른 온실가스 배출량
            params[1].value * 35.2 * 73.2 * Math.pow(10, -6) +
            // 수송에 따른 온실가스 배출량
            ((282 * 24 * 365 * params[0].value) /
              2318763.24 /
              params[2].value) *
              params[3].value *
              (35.2 * 73.2 * (1 / ((9.2 + 9.3 + 9.5) / 3)) * Math.pow(10, -3)) *
              Math.pow(10, -3) +
            params[3].value +
            // 물리적 누출에 의한 배출
            ((460 * 24 * 365 * params[0].value) / 2318763.24) *
              0.05 *
              0.61 *
              0.0007156 *
              21 +
            ((282 * 24 * 365 * 96.5 * Math.pow(10, -2) * params[0].value) /
              2318763.24) *
              0.0000125 *
              21
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            params[0].value * 39.4 * 56.1 * Math.pow(10, -6) - // 전략 사용에 따른 온실가스 배출량
            (((12516 * 365 * Math.pow(10, -3) * params[0].value) / 2318763.24) *
              0.4591 +
              // 화석연료 사용에 따른 온실가스 배출량
              params[1].value * 35.2 * 73.2 * Math.pow(10, -6) +
              // 수송에 따른 온실가스 배출량
              ((282 * 24 * 365 * params[0].value) /
                2318763.24 /
                params[2].value) *
                params[3].value *
                (35.2 *
                  73.2 *
                  (1 / ((9.2 + 9.3 + 9.5) / 3)) *
                  Math.pow(10, -3)) *
                Math.pow(10, -3) +
              params[3].value +
              // 물리적 누출에 의한 배출
              ((460 * 24 * 365 * params[0].value) / 2318763.24) *
                0.05 *
                0.61 *
                0.0007156 *
                21 +
              //
              ((282 * 24 * 365 * 96.5 * Math.pow(10, -2) * params[0].value) /
                2318763.24) *
                0.0000125 *
                21)
          );
        },
      },
    ],
  },
  {
    id: 2,
    params: [
      { id: 1, title: 'LPG 택시 차량 대수', unit: '대', default: 0 },
      { id: 2, title: '경유 트럭 차량 대수', unit: '대', default: 0 },
      { id: 3, title: '경유 버스 차량 대수', unit: '대', default: 0 },
      { id: 4, title: 'CNG 버스 차량 대수', unit: '대', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 택시 베이스라인 배출량
            0.000288 *
              0.5 *
              58.4 *
              64.0 *
              292000 *
              params[0].value *
              Math.pow(10, -6) +
            // 화물차량 베이스라인 배출량
            0.00026 *
              35.2 *
              73.2 *
              292000 *
              params[1].value *
              Math.pow(10, -6) +
            // 승합차량(경유) 베이스라인 배출량
            0.00041 *
              35.2 *
              73.2 *
              292000 *
              params[2].value *
              Math.pow(10, -6) +
            // 승합차량(CNG) 베이스라인 배출량
            0.00099 * 38.9 * 56.1 * 292000 * params[3].value * Math.pow(10, -6)
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            973.333333333333 *
            (0.000288 * 0.5 * 58.4 * 64.0 * 10 * params[0].value +
              0.00026 * 35.2 * 73.2 * 10 * params[1].value +
              0.00041 * 35.2 * 73.2 * 10 * params[2].value +
              0.00099 * 38.9 * 56.1 * 10 * params[3].value) *
            Math.pow(10, -6)
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 택시 베이스라인 배출량
            0.000288 *
              0.5 *
              58.4 *
              64.0 *
              292000 *
              params[0].value *
              Math.pow(10, -6) +
            // 화물차량 베이스라인 배출량
            0.00026 *
              35.2 *
              73.2 *
              292000 *
              params[1].value *
              Math.pow(10, -6) +
            // 승합차량(경유) 베이스라인 배출량
            0.00041 *
              35.2 *
              73.2 *
              292000 *
              params[2].value *
              Math.pow(10, -6) +
            // 승합차량(CNG) 베이스라인 배출량
            0.00099 *
              38.9 *
              56.1 *
              292000 *
              params[3].value *
              Math.pow(10, -6) -
            973.333333333333 *
              (0.000288 * 0.5 * 58.4 * 64.0 * 10 * params[0].value +
                0.00026 * 35.2 * 73.2 * 10 * params[1].value +
                0.00041 * 35.2 * 73.2 * 10 * params[2].value +
                0.00099 * 38.9 * 56.1 * 10 * params[3].value) *
              Math.pow(10, -6)
          );
        },
      },
    ],
  },
  {
    id: 3,
    params: [
      { id: 1, title: '승용 차량 대수', unit: '대', default: 0 },
      { id: 2, title: '승합 차량 대수', unit: '대', default: 0 },
      { id: 4, title: '화물 차량 대수', unit: '대', default: 0 },
      { id: 5, title: '전기 버스 대체 대수', unit: '대', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량(도입)',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 베이스라인 배출량
            (((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[0].value) /
              10 +
            // 승합차량 연평균 베이스라인 배출량
            (((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[1].value) /
              10 +
            // 화물차량 연평균 베이스라인 배출량
            (((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[2].value +
              ((18018.8333333333 * (0.107142857142857 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[2].value) /
              10
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량(도입)',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            ((16984.6666666667 * 0.212615166548547 * 0.45941) /
              Math.pow(10, 3)) *
            (params[0].value + params[1].value + params[2].value)
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량(도입)',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 베이스라인 배출량
            (((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[0].value +
              ((13018.3333333333 * (0.085 * 30.4 * 71.6)) / Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[0].value) /
              10 +
            // 승합차량 연평균 베이스라인 배출량
            (((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[1].value +
              ((19916.8333333333 * (0.102 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[1].value) /
              10 +
            // 화물차량 연평균 베이스라인 배출량
            (((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[2].value +
              ((18018.8333333333 * (0.107 * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[2].value) /
              10 -
            ((16984.6666666667 * 0.212615166548547 * 0.45941) /
              Math.pow(10, 3)) *
              (params[0].value + params[1].value + params[2].value)
          );
        },
      },
      {
        id: 4,
        title: '연평균 베이스라인 배출량(버스대체)',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            (((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[3].value) /
            10
          );
        },
      },
      {
        id: 5,
        title: '연평균 사업 배출량(버스대체)',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            ((81463 * 1.063 * 0.45941) / Math.pow(10, 3)) * params[3].value
          );
        },
      },
      {
        id: 6,
        title: '연평균 온실가스 배출 감축량(버스대체)',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            (((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[3].value +
              ((81463 * (0.497 * 49.4 * 56.1)) / Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[3].value) /
              10 -
            ((81463 * 1.063 * 0.45941) / Math.pow(10, 3)) * params[3].value
          );
        },
      },
    ],
  },
  {
    id: 4,
    params: [
      { id: 1, title: '승용 차량 대수', unit: '대', default: 0 },
      { id: 2, title: '승합 차량 대수', unit: '대', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 베이스라인 배출량
            (((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[0].value) /
              10 +
            // 승합차량 연평균 베이스라인 배출량
            (((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[1].value) /
              10
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 사업 배출량
            13018.3333333333 *
              (0.0485044462409054 * 30.4 * 71.6 * Math.pow(10, -6)) *
              params[0].value +
            // 승합차량 연평균 사업 배출량
            19916.8333333333 *
              (0.0485044462409054 * 35.2 * 73.2 * Math.pow(10, -6)) *
              params[1].value
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 베이스라인 배출량
            (((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[0].value +
              ((13018.3333333333 * (0.0852272727272727 * 30.4 * 71.6)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[0].value) /
              10 +
            // 승합차량 연평균 베이스라인 배출량
            (((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[1].value +
              ((19916.8333333333 * (0.102040816326531 * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[1].value) /
              10 - // 승용차량 연평균 사업 배출량
            (13018.3333333333 *
              (0.0485044462409054 * 30.4 * 71.6 * Math.pow(10, -6)) *
              params[0].value +
              // 승합차량 연평균 사업 배출량
              19916.8333333333 *
                (0.0485044462409054 * 35.2 * 73.2 * Math.pow(10, -6)) *
                params[1].value)
          );
        },
      },
    ],
  },
  {
    id: 5,
    params: [
      {
        id: 1,
        title: '수소전기차량(승용) 대수',
        unit: '대',
        default: 0,
      },
      { id: 2, title: '수소전기차량(화물) 대수', unit: '대', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 베이스라인 배출량
            (((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[0].value) /
              10 +
            // 화물차량 연평균 베이스라인 배출량
            (((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[1].value) /
              10
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return 82351.3208692185 * 0.0033;
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            // 승용차량 연평균 베이스라인 배출량
            (((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
              Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[0].value +
              ((13018.3333333333 * ((1 / 17.6) * 35.2 * 73.2)) /
                Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[0].value) /
              10 +
            // 화물차량 연평균 베이스라인 배출량
            (((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
              Math.pow(0.99, 1) *
              params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 2) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 3) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 4) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 5) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 6) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 7) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 8) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 9) *
                params[1].value +
              ((1511481.6 * ((1 / 3.7) * 35.2 * 73.2)) / Math.pow(10, 6)) *
                Math.pow(0.99, 10) *
                params[1].value) /
              10 -
            82351.3208692185 * 0.0033
          );
        },
      },
    ],
  },
  {
    id: 6,
    params: [
      { id: 1, title: '경유 승용 차량 대수', unit: '대', default: 0 },
      { id: 2, title: '휘발유 승용 차량 대수', unit: '대', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            13018.3333333333 *
              (0.079155672823219 * (1 + 0.005) * 35.2 * 73.2) *
              params[0].value *
              Math.pow(10, -6) +
            13018.3333333333 *
              (0.0852272727272727 * (1 + 0.005) * 30.4 * 71.6) *
              params[1].value *
              Math.pow(10, -6)
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            13018.3333333333 *
              (0.079155672823219 * 35.2 * 73.2) *
              params[0].value *
              Math.pow(10, -6) +
            13018.3333333333 *
              (0.0852272727272727 * 30.4 * 71.6) *
              params[1].value *
              Math.pow(10, -6)
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            13018.3333333333 *
              (0.079155672823219 * (1 + 0.005) * 35.2 * 73.2) *
              params[0].value *
              Math.pow(10, -6) +
            13018.3333333333 *
              (0.0852272727272727 * (1 + 0.005) * 30.4 * 71.6) *
              params[1].value *
              Math.pow(10, -6) -
            (13018.3333333333 *
              (0.079155672823219 * 35.2 * 73.2) *
              params[0].value *
              Math.pow(10, -6) +
              13018.3333333333 *
                (0.0852272727272727 * 30.4 * 71.6) *
                params[1].value *
                Math.pow(10, -6))
          );
        },
      },
    ],
  },
  {
    id: 7,
    params: [
      {
        id: 1,
        title: '공유자전거 총 이용자 수',
        unit: '명',
        default: 0,
      },
      {
        id: 2,
        title: '전기 자전거 총 이동거리',
        unit: 'km',
        default: 0,
      },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            // 연평균 베이스라인 배출량(휘발유)
            (Math.pow(0.99, 1) *
              154.590909090909 *
              3.26345 *
              0.0481099656357388 *
              params[0].value *
              Math.pow(10, -6) +
              Math.pow(0.99, 2) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 3) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 4) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 5) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 6) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 7) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 8) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 9) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 10) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6)) /
              10 +
            // 연평균 베이스라인 배출량(경유)
            (Math.pow(0.99, 1) *
              169.963060686016 *
              3.54253703703704 *
              0.0185567010309278 *
              params[0].value *
              Math.pow(10, -6) +
              Math.pow(0.99, 2) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 3) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 4) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 5) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 6) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 7) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 8) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 9) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 10) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6)) /
              10
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            1475393 * 0.107142857142857 * 35.2 * 73.2 * Math.pow(10, -6) +
            13500 * 0.129310344827586 * 58.4 * 64.0 * Math.pow(10, -6) +
            params[1].value * 0.015 * 0.4591 * Math.pow(10, -3)
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 연평균 베이스라인 배출량(휘발유)
            (Math.pow(0.99, 1) *
              154.590909090909 *
              3.26345 *
              0.0481099656357388 *
              params[0].value *
              Math.pow(10, -6) +
              Math.pow(0.99, 2) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 3) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 4) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 5) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 6) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 7) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 8) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 9) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 10) *
                154.590909090909 *
                3.26345 *
                0.0481099656357388 *
                params[0].value *
                Math.pow(10, -6)) /
              10 +
            // 연평균 베이스라인 배출량(경유)
            (Math.pow(0.99, 1) *
              169.963060686016 *
              3.54253703703704 *
              0.0185567010309278 *
              params[0].value *
              Math.pow(10, -6) +
              Math.pow(0.99, 2) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 3) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 4) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 5) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 6) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 7) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 8) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 9) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6) +
              Math.pow(0.99, 10) *
                169.963060686016 *
                3.54253703703704 *
                0.0185567010309278 *
                params[0].value *
                Math.pow(10, -6)) /
              10 -
            (1475393 * 0.107142857142857 * 35.2 * 73.2 * Math.pow(10, -6) +
              13500 * 0.129310344827586 * 58.4 * 64.0 * Math.pow(10, -6) +
              params[1].value * 0.015 * 0.4591 * Math.pow(10, -3))
          );
        },
      },
    ],
  },
  {
    id: 8,
    params: [
      {
        id: 1,
        title: '공항특수차량 화석연료 연간 사용량',
        unit: 'kg,L,Nm³/년',
        default: 0,
      },
      {
        id: 2,
        title: '공항 특수차량 연간 가동시간',
        unit: 'hours/년',
        default: 0,
      },
      { id: 3, title: '공항특수차량 물동량', unit: 'ton', default: 0 },
      {
        id: 4,
        title: '전기 공항특수차량 전력 사용량',
        unit: 'MWh/년',
        default: 0,
      },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            ((params[0].value * 35.2 * 73.2) /
              (params[1].value * params[2].value)) *
            Math.pow(10, -6) *
            params[1].value *
            params[2].value
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return params[3].value * 0.45941 * 1;
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            ((params[0].value * 35.2 * 73.2) /
              (params[1].value * params[2].value)) *
              Math.pow(10, -6) *
              params[1].value *
              params[2].value -
            params[3].value * 0.45941 * 1
          );
        },
      },
    ],
  },
  {
    id: 9,
    params: [
      {
        id: 1,
        title: '선박으로 운송된 화물의 양',
        unit: 'ton',
        default: 0,
      },
      {
        id: 2,
        title: '화물 운송 기본배출계수(화물유형 선택)',
        unit: 'gCO₂/tkm',
        default: 0,
      },
      { id: 3, title: '선박으로 반송된 화물의 양', unit: 'ton', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            params[0].value *
            260.833333333333 *
            params[1].value *
            Math.pow(10, -6)
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            params[0].value *
            260.833333333333 *
            70 *
            Math.pow(10, -6) *
            (params[0].value / (params[0].value + params[2].value))
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            params[0].value *
              260.833333333333 *
              params[1].value *
              Math.pow(10, -6) -
            0.5 * (params[0].value * 260.833333333333 * 70 * Math.pow(10, -6))
          );
        },
      },
    ],
  },
  {
    id: 10,
    params: [
      {
        id: 1,
        title: '운송되는 화석연료의 양',
        unit: 'ton',
        default: 0,
      },
      {
        id: 2,
        title: '파이프라인 시스템 전력 사용량',
        unit: 'kWh',
        default: 0,
      },
      {
        id: 3,
        title: '파이프라인 시스템 화석연료 사용량',
        unit: 'kg,l,Nm³/년',
        default: 0,
      },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return params[0].value * 260.833333333333 * 76 * Math.pow(10, -6);
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            params[1].value * 0.4591 * Math.pow(10, -3) +
            params[2].value * 39.2 * 80.3 * Math.pow(10, -6)
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            params[0].value * 260.833333333333 * 76 * Math.pow(10, -6) -
            (params[1].value * 0.4591 * Math.pow(10, -3) +
              params[2].value * 39.2 * 80.3 * Math.pow(10, -6))
          );
        },
      },
    ],
  },
  {
    id: 11,
    params: [
      { id: 1, title: '경유 승용 차량 대수', unit: '대', default: 0 },
      { id: 2, title: '휘발유 승용 차량 대수', unit: '대', default: 0 },
      { id: 3, title: '승합 차량 대수', unit: '대', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            13018.3333333333 *
              (0.079155672823219 * 35.2 * 73.2) *
              Math.pow(10, -6) *
              params[0].value +
            13018.3333333333 *
              (0.0852272727272727 * 30.4 * 71.6) *
              Math.pow(10, -6) *
              params[1].value +
            19916.8333333333 *
              (0.0852272727272727 * 35.2 * 73.2) *
              Math.pow(10, -6) *
              params[2].value
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            13018.3333333333 *
              (0.079155672823219 / (1 + 0.083)) *
              35.2 *
              73.2 *
              params[0].value *
              Math.pow(10, -6) +
            13018.3333333333 *
              (0.0852272727272727 / (1 + 0.083)) *
              30.4 *
              71.6 *
              params[1].value *
              Math.pow(10, -6) +
            19916.8333333333 *
              (0.0852272727272727 / (1 + 0.083)) *
              35.2 *
              73.2 *
              params[2].value *
              Math.pow(10, -6)
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            13018.3333333333 *
              (0.079155672823219 * 35.2 * 73.2) *
              Math.pow(10, -6) *
              params[0].value +
            13018.3333333333 *
              (0.0852272727272727 * 30.4 * 71.6) *
              Math.pow(10, -6) *
              params[1].value +
            19916.8333333333 *
              (0.0852272727272727 * 35.2 * 73.2) *
              Math.pow(10, -6) *
              params[2].value -
            (13018.3333333333 *
              (0.079155672823219 / (1 + 0.083)) *
              35.2 *
              73.2 *
              params[0].value *
              Math.pow(10, -6) +
              13018.3333333333 *
                (0.0852272727272727 / (1 + 0.083)) *
                30.4 *
                71.6 *
                params[1].value *
                Math.pow(10, -6) +
              19916.8333333333 *
                (0.0852272727272727 / (1 + 0.083)) *
                35.2 *
                73.2 *
                params[2].value *
                Math.pow(10, -6))
          );
        },
      },
    ],
  },
  {
    id: 12,
    params: [
      {
        id: 1,
        title: '공급하거나 판매한 바이오 CNG 양',
        unit: 'Nm³/년',
        default: 0,
      },
      {
        id: 2,
        title: '설비 운전 화석연료 사용량',
        unit: 'Nm³,L,ton/년',
        default: 0,
      },
      {
        id: 3,
        title: 'CNG 운송용 트럭 평균 용량',
        unit: 'km/Truck',
        default: 0,
      },
      { id: 4, title: 'CNG 운송거리', unit: 'Nm³/년', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            ((params[0].value * 39.4) / 30.4) *
            0.95 *
            1 *
            30.4 *
            71.6 *
            Math.pow(10, -6)
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            ((12516 * 365 * Math.pow(10, -3) * params[0].value) / 2318763.24) *
              0.4591 +
            params[1].value * 35.2 * 73.2 +
            ((282 * 24 * 365 * params[0].value) /
              2318763.24 /
              params[2].value) *
              params[3].value *
              (35.2 * 73.2 * 0.107142857142857 * Math.pow(10, -6)) *
              Math.pow(10, -3) +
            ((460 * 24 * 365 * params[0].value) / 2318763.24) *
              0.05 *
              0.61 *
              0.0007156 *
              21 +
            ((282 * 24 * 365 * 96.5 * Math.pow(10, -2) * params[0].value) /
              2318763.24) *
              0.0000125 *
              21 +
            params[3].value
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            ((params[0].value * 39.4) / 30.4) *
              0.95 *
              1 *
              30.4 *
              71.6 *
              Math.pow(10, -6) -
            (((12516 * 365 * Math.pow(10, -3) * params[0].value) / 2318763.24) *
              0.4591 +
              params[1].value * 35.2 * 73.2 +
              ((282 * 24 * 365 * params[0].value) /
                2318763.24 /
                params[2].value) *
                params[3].value *
                (35.2 * 73.2 * 0.107142857142857 * Math.pow(10, -6)) *
                Math.pow(10, -3) +
              ((460 * 24 * 365 * params[0].value) / 2318763.24) *
                0.05 *
                0.61 *
                0.0007156 *
                21 +
              ((282 * 24 * 365 * 96.5 * Math.pow(10, -2) * params[0].value) /
                2318763.24) *
                0.0000125 *
                21 +
              params[3].value)
          );
        },
      },
    ],
  },
  {
    id: 13,
    params: [
      { id: 1, title: '경유 승용 차량 대수 ', unit: '대', default: 0 },
      { id: 2, title: '휘발유 승용 차량 대수', unit: '대', default: 0 },
      { id: 3, title: '승합 차량 대수', unit: '대', default: 0 },
      { id: 4, title: '화물 차량 대수', unit: '대', default: 0 },
      { id: 5, title: '기술선택', unit: 'Nm³', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            // 승용차량 연평균 베이스라인 배출량 (경유)
            13018.3333333333 *
              (0.079155672823219 * 35.2 * 73.2) *
              params[1].value *
              Math.pow(10, -6) *
              params[0].value +
            // 승용차량 연평균 베이스라인 배출량 (휘발유)
            13018.3333333333 *
              (0.0852272727272727 * 30.4 * 71.6) *
              Math.pow(10, -6) *
              params[1].value +
            // 승합차량 연평균 베이스라인 배출량
            19916.8333333333 *
              (0.102040816326531 * 35.2 * 73.2) *
              Math.pow(10, -6) *
              params[2].value +
            // 화물차량 연평균 베이스라인 배출량
            1352160 *
              ((0.107142857142857 * 35.2 * 73.2) / 52) *
              Math.pow(10, -6) *
              params[3].value
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 사업 배출량(경유)
            13018.3333333333 *
              ((0.079155672823219 / (1 + SELECT_13[params[4].value].gas)) *
                35.2 *
                73.2) *
              params[0].value *
              Math.pow(10, -6) +
            // 승용차량 연평균 사업 배출량(휘발유)
            13018.3333333333 *
              ((0.0852272727272727 / (1 + SELECT_13[params[4].value].oil)) *
                30.4 *
                71.6) *
              Math.pow(10, -6) *
              params[1].value +
            // 승합차량 연평균 사업 배출량
            19916.8333333333 *
              ((0.102040816326531 / (1 + SELECT_13[params[4].value].van)) *
                35.2 *
                73.2) *
              Math.pow(10, -6) *
              params[2].value +
            // 화물 차량 연평균 사업 배출량
            1352160 *
              (((0.107142857142857 / (1 + SELECT_13[params[4].value].cargo)) *
                35.2 *
                73.2) /
                52.0) *
              Math.pow(10, -6) *
              params[3].value
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            // 승용차량 연평균 베이스라인 배출량 (경유)
            13018.3333333333 *
              (0.079155672823219 * 35.2 * 73.2) *
              params[1].value *
              Math.pow(10, -6) *
              params[0].value +
            // 승용차량 연평균 베이스라인 배출량 (휘발유)
            13018.3333333333 *
              (0.0852272727272727 * 30.4 * 71.6) *
              Math.pow(10, -6) *
              params[1].value +
            // 승합차량 연평균 베이스라인 배출량
            19916.8333333333 *
              (0.102040816326531 * 35.2 * 73.2) *
              Math.pow(10, -6) *
              params[2].value +
            // 화물차량 연평균 베이스라인 배출량
            1352160 *
              ((0.107142857142857 * 35.2 * 73.2) / 52) *
              Math.pow(10, -6) *
              params[3].value -
            // 승용차량 연평균 사업 배출량(경유)
            (13018.3333333333 *
              (0.075 * 35.2 * 73.2) *
              params[0].value *
              Math.pow(10, -6) +
              // 승용차량 연평균 사업 배출량(휘발유)
              13018.3333333333 *
                (0.081 * 30.4 * 71.6) *
                Math.pow(10, -6) *
                params[1].value +
              // 승합차량 연평균 사업 배출량
              19916.8333333333 *
                (0.1 * 35.2 * 73.2) *
                Math.pow(10, -6) *
                params[2].value +
              // 화물 차량 연평균 사업 배출량
              1352160 *
                ((0.103 * 35.2 * 73.2) / 52.0) *
                Math.pow(10, -6) *
                params[3].value)
          );
        },
      },
    ],
  },
  {
    id: 14,
    params: [
      {
        id: 1,
        title: '승용 차량 충전량 합계',
        unit: 'kWh/년',
        default: 0,
      },
      { id: 2, title: '승합 차량 충전량 합계', unit: 'kWh/년', default: 0 },
      { id: 4, title: '화물 차량 충전량 합계', unit: 'kWh/년', default: 0 },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            //
            (((0.0852272727272727 *
              30.4 *
              71.6 *
              Math.pow(0.99, 1) *
              params[0].value) /
              0.212615166548547) *
              Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 2) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 3) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 4) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 5) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 6) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 7) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 8) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 9) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 10) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6)) /
              10 +
            //
            (((0.102040816326531 *
              35.2 *
              73.2 *
              Math.pow(0.99, 1) *
              params[1].value) /
              0.212615166548547) *
              Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 2) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 3) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 4) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 5) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 6) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 7) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 8) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 9) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 10) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6)) /
              10 +
            //
            (((0.107142857142857 *
              35.2 *
              73.2 *
              Math.pow(0.99, 1) *
              params[2].value) /
              0.212615166548547) *
              Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 2) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 3) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 4) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 5) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 6) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 7) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 8) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 9) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 10) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6)) /
              10
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            (0.212615166548547 * 0.45941 * Math.pow(10, -3) * 18000) /
            0.212615166548547
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          console.log(params);
          return (
            //
            (((0.0852272727272727 *
              30.4 *
              71.6 *
              Math.pow(0.99, 1) *
              params[0].value) /
              0.212615166548547) *
              Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 2) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 3) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 4) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 5) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 6) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 7) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 8) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 9) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.0852272727272727 *
                30.4 *
                71.6 *
                Math.pow(0.99, 10) *
                params[0].value) /
                0.212615166548547) *
                Math.pow(10, -6)) /
              10 +
            //
            (((0.102040816326531 *
              35.2 *
              73.2 *
              Math.pow(0.99, 1) *
              params[1].value) /
              0.212615166548547) *
              Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 2) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 3) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 4) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 5) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 6) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 7) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 8) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 9) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.102040816326531 *
                35.2 *
                73.2 *
                Math.pow(0.99, 10) *
                params[1].value) /
                0.212615166548547) *
                Math.pow(10, -6)) /
              10 +
            //
            (((0.107142857142857 *
              35.2 *
              73.2 *
              Math.pow(0.99, 1) *
              params[2].value) /
              0.212615166548547) *
              Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 2) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 3) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 4) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 5) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 6) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 7) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 8) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 9) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6) +
              ((0.107142857142857 *
                35.2 *
                73.2 *
                Math.pow(0.99, 10) *
                params[2].value) /
                0.212615166548547) *
                Math.pow(10, -6)) /
              10 -
            (0.212615166548547 * 0.45941 * Math.pow(10, -3) * 18000) /
              0.212615166548547
          );
        },
      },
    ],
  },
  {
    id: 15,
    params: [
      { id: 1, title: '승합 차량 대수', unit: '대', default: 0 },
      { id: 2, title: '화물 차량 대수', unit: '대', default: 0 },
      {
        id: 3,
        title: '승합 차량 화석연료 소비량(주유량 또는 구매량)',
        unit: 'L/년',
        default: 0,
      },
      {
        id: 4,
        title: '화물 차량 화석연료 소비량(주유량 또는 구매량)',
        unit: 'L/년',
        default: 0,
      },
    ],
    result: [
      {
        id: 1,
        title: '연평균 베이스라인 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            4104430000 *
              3665.51067992389 *
              (((42284 * 0.102040816326531 * 35.2 * 73.2) /
                (5794026000 * 5264.21110295328)) *
                Math.pow(10, -6)) *
              params[0].value +
            974107000 *
              27929.9748384931 *
              (((100531.2 * 0.107142857142857 * 35.2 * 73.2) /
                (1005866000 * 27929.9866980294)) *
                Math.pow(10, -6)) *
              params[1].value
          );
        },
      },
      {
        id: 2,
        title: '연평균 사업 배출량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            params[2].value * 35.2 * 73.2 * Math.pow(10, -6) +
            params[3].value * 35.2 * 73.2 * Math.pow(10, -6)
          );
        },
      },
      {
        id: 3,
        title: '연평균 온실가스 배출 감축량',
        unit: 'tCO₂-eq/년',
        formula: (params: any) => {
          return (
            4104430000 *
              3665.51067992389 *
              (((42284 * 0.102040816326531 * 35.2 * 73.2) /
                (5794026000 * 5264.21110295328)) *
                Math.pow(10, -6)) *
              params[0].value +
            974107000 *
              27929.9748384931 *
              (((100531.2 * 0.107142857142857 * 35.2 * 73.2) /
                (1005866000 * 27929.9866980294)) *
                Math.pow(10, -6)) *
              params[1].value -
            (params[2].value * 35.2 * 73.2 * Math.pow(10, -6) +
              params[3].value * 35.2 * 73.2 * Math.pow(10, -6))
          );
        },
      },
    ],
  },
];
